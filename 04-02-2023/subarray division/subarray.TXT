import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'birthday' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY s
     *  2. INTEGER d
     *  3. INTEGER m
     */

    public static int birthday(List<Integer> s, int d, int m) {
        //Collections.sort(s);
        List<Integer> list=new ArrayList<>();
        int c=0;
        for(int i=0;i<s.size()-m+1;i++)
        {
            int count=s.get(i);
            for(int j=i+1;j<i+m;j++)
            {
                count=count+s.get(j);
                
            }
            if(count==d)
            {
                c++;
            }
        }
        return c;
               /* list.add(s.get(i));
                for(int j=i+1;j<i+m;j++)
                {
                    list.add(s.get(j));
                }
            }
        }
        for(int i=0;i<list.size()-m;i++)
        {
            List<Integer> s1=new ArrayList<>();
            List<Integer> s2=new ArrayList<>();
            for(int l=0;l<i+m;l++)
            {
                s1.add(list.get(l));
            }
            for(int g=m;g<m+2;g++)
            {
                s2.add(list.get(g));
            }
            if(s1.equals(s2))
            {
                c--;
                
            }
            s1.clear();
            s2.clear();
        
        }
       
        return c;*/
        
    // Write your code here

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> s = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int d = Integer.parseInt(firstMultipleInput[0]);

        int m = Integer.parseInt(firstMultipleInput[1]);

        int result = Result.birthday(s, d, m);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
