/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
    ListNode slow=head;
    ListNode fast=head;
      for(int i = 0; i < n; i++) {
        fast = fast.next;
      }
      
      /** Increment both fast and slow by 1 until the fast pointer reaches the end */
      ListNode prev = head;
      while (fast != null) {
        prev = slow;
        slow = slow.next;
        fast = fast.next;
      }
      
      if (slow != head) {
        prev.next = slow.next;
      }
      else {
        head = head.next;
      }
      return head;
    }


    }